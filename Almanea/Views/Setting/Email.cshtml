
@{
    ViewBag.Title = Translation.Email;
}


@model Almanea.Models.vm_Email

@using Almanea.BusinessLogic;

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">

            <div class="card-body">
                @using (Ajax.BeginForm("EditEmail", "Setting", null,
                                     new AjaxOptions
                                     {
                                         HttpMethod = "POST",
                                         OnSuccess = "onSuccess",
                                         OnBegin = "onBegin",
                                         OnComplete = "onComplete"
                                     }, new { id = "frmAdd" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.SubjectEN, new { @class = "bmd-label-floating required" })
                                @Html.TextBoxFor(m => m.SubjectEN, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.SubjectEN, "", new { @class = "valid-text" })
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.SubjectAR, new { @class = "bmd-label-floating required" })
                                @Html.TextBoxFor(m => m.SubjectAR, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.SubjectAR, "", new { @class = "valid-text" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.EmailTextEN, new { @class = "bmd-label-floating required" })
                                @Html.TextAreaFor(m => m.EmailTextEN, new { @class = "form-control", @placeholder = Translation.ReqEmail })
                            </div>
                            @Html.ValidationMessageFor(m => m.EmailTextEN, "", new { @class = "valid-text" })
                        </div>
                        <div class="col-lg-6 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.EmailTextAR, new { @class = "bmd-label-floating required" })
                                @Html.TextAreaFor(m => m.EmailTextAR, new { @class = "form-control numOnly", @placeholder = Translation.MobileFormat })
                            </div>
                            @Html.ValidationMessageFor(m => m.EmailTextAR, "", new { @class = "valid-text" })
                        </div>
                    </div>
                    <p class="mg-t-15">
                        <input type="submit" class="btn btn-primary pull-right" value="@Translation.Submit" />
                    </p>
                    @Html.HiddenFor(m => m.Id)
                }
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/tinymce/tinymce.js"></script>
    <script>
        tinymce.init({
            selector: 'textarea',
            // General options
            mode: "textareas",
            theme: "silver",
            plugins: "code",
            height: 350,
            // Theme options
            theme_advanced_buttons1: "save,newdocument,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,|,styleselect,formatselect,fontselect,fontsizeselect",
            theme_advanced_buttons2: "cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,help,code,|,insertdate,inserttime,preview,|,forecolor,backcolor",
            theme_advanced_buttons3: "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,charmap,emotions,iespell,media,advhr,|,print,|,ltr,rtl,|,fullscreen",
            theme_advanced_buttons4: "insertlayer,moveforward,movebackward,absolute,|,styleprops,spellchecker,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,template,blockquote,pagebreak,|,insertfile,insertimage",
            theme_advanced_toolbar_location: "top",
            theme_advanced_toolbar_align: "left",
            theme_advanced_statusbar_location: "bottom",
            theme_advanced_resizing: true,
            setup: function (editor) {
                editor.on('change', function () {
                    tinymce.triggerSave();
                });
            }
        });

          function onSuccess(response) {
            if (response.StatusId > 0) {
                successPopup("@Translation.success_Update");
            }
            else if (response.Message != '') {
                warningPopup(response.Message);
            }
        }
    </script>
}