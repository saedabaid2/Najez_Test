
@{
    ViewBag.Title = Translation.Complain;
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

@using Almanea.Models
@using Almanea.BusinessLogic

@model vm_Complain

<div class="card-body p-0">
    <div class="text-center">
        <img src="~/Content/Light-Icon.png" style="max-height: 120px" class="img-profile" />
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 ml-4 mt-5">
            @using (Ajax.BeginForm("AddComplain", "Complain",
                   new AjaxOptions
                   {
                       HttpMethod = "POST",
                       OnSuccess = "onSuccess",
                       OnBegin = "onBegin",
                       OnComplete = "onComplete"
                   }, new { id = "frmAdd", @autocomplete = "off" }))
            {
                @Html.AntiForgeryToken()

                <div class="row">
                    <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CategoryId, new { @class = "bmd-label-floating" })
                            @*@Html.DropDownListFor(model => model.CategoryId, ViewBag.Category as List<SelectListItem>, Translation.Select, new { @class = "form-control select2" })*@
                            <!--<select class="select2-multiple form-control" name="CategoryId" multiple="multiple"
                                    id="select2Multiple" style="width: 100%;">-->
                                @*<option value="0">@Translation.SelectStatus</option>*@
                                <!--@foreach (var item in ViewBag.Category as List<SelectListItem>)
                                {

                                    <option value="@item.Value">@item.Text</option>


                                }
                            </select>-->

                            <select class="select2-multiple form-control" name="ComplainId" multiple="multiple"
                                    id="ComplainId" style="width: 100%;height:200px">
                                @*<option value="0">@Translation.SelectStatus</option>*@
                                @foreach (var item in ViewBag.Category as List<SelectListItem>)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>

                        </div>
                        @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "valid-text" })
                    </div>
                    @*<div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Subject, new { @class = "bmd-label-floating required" })
                                @Html.TextBoxFor(m => m.Subject, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.Subject, "", new { @class = "valid-text" })
                        </div>*@
                    <div class="col-lg-5 col-md-6 col-sm-6 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Complain, new { @class = "bmd-label-floating required" })
                            @Html.TextAreaFor(m => m.Complain, new { @class = "form-control", @style = "resize:none;" })
                        </div>
                        @Html.ValidationMessageFor(m => m.Complain, "", new { @class = "valid-text" })
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        @Html.HiddenFor(m => m.OrderId)
                        @Html.Hidden("ComplainBy", (byte)1)
                    </div>
                </div>
                <p style="vertical-align: bottom">
                    @*<input type="submit" value="@Translation.Submit" class="btn btn-primary" onclick="confirm('@Translation.confirm_Complain')" />*@
                    <input type="submit" value="@Translation.Submit" class="btn btn-primary" id="btnsubmitcomplain" />

                </p>
            }
        </div>

        <div class="table-responsive">
            <table class="table align-items-center table-flush" id="dataTable">
                <thead class="thead-light">
                    <tr>
                        <th width="20%">@Translation.ComplainId</th>
                        <th width="30%">@Translation.ComplainCategory</th>
                        <th width="30%">@Translation.Complain</th>
                        @*<th width="30%">@Translation.ComplainNewStatus</th>*@
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>

    </div>
</div>

@section scripts{

    <script>
        function onSuccess(response) {
            if (response.StatusId > 0) {
                $('#frmAdd').find('input[type=text]').val('');;
                $('#frmAdd').find('#Complain').val('');;

                BindDataTable();

                successPopup("@Translation.success_Complain");
            }
        }
    </script>

    <script>

        $('#ComplainId').change(function () {
        var minimum = 1;
            if ($("#ComplainId").select2('data').length >= minimum) {
            $('#btnsubmitcomplain').show();
            $('#spnclor').html('');
        }
        else {
            $('#btnsubmitcomplain').hide();
            $('#spnclor').html('Please Select atleast one complain type ');
        }
    });
        $(document).ready(function () {
            async: true;
            //List
            BindDataTable();
             $('#frmAdd').submit(function (e) {

            return confirm('@Translation.confirm_Complain');
        });
        $('.select2-multiple').select2();
        $('#btnsubmitcomplain').hide();
        });

        var oTable;
        function BindDataTable(response) {
            if ($.fn.DataTable.isDataTable("#dataTable")) {
                oTable.draw();
            }
            else {
                oTable = $("#dataTable").DataTable({
                    "bProcessing": true,
                    "bServerSide": true,
                    "dom": '<"top"i>rt<"bottom"lp><"clear">',
                    "bSearchable": true,
                    "bSortable": true,
                    "bLengthChange": false,
                    "bInfo": true,
                    "bAutoWidth": false,
                    "AutoWidth": false,
                    "sAjaxSource": "@Url.Action("ListCustomer")",
                    "fnServerData": function (sSource, aoData, fnCallBack) {
                        aoData.push(
                            { "name": "OrderId", "value": @Model.OrderId },
                        );
                        $.ajax({
                            type: "GET",
                            url: sSource,
                            data: aoData,
                            success: fnCallBack
                        });
                    },
                    // data: response,
                    "aoColumns": [
                        { "mData": "ComplainId" },
                        { "mData": "Category", "orderable": false },
                        //{ "mData": "statusId", },
                        //{ "mData": "AddedOn", },
                        //{ "mData": "CloseDate", },
                        //{ "mData": "Comments", "orderable": false },
                         {
                            "mData": "Id",
                            "render": function (Id, type, full, meta) {
                                return '<a href="@Url.Action("CustomerDetails")?Id=' + Id + '&OrderId=@ViewBag.OrderId" title="@Translation.View" data-toggle="tooltip">@Translation.Complain</a>';
                            },
                            "orderable": false
                        },
                    ],
                    "order": [[0, "desc"]],
                    "fnInitComplete": function (oSettings, json) {
                    },
                    "fnDrawCallback": function (oSettings) {
                    },
                    "language": {
                        "paginate": {
                            "previous": "«",
                            "next": "»",
                        },
                        "info": "@Translation.Showing _START_ @Translation.to _END_ @Translation.of _TOTAL_ @Translation.entries",
                        "infoEmpty": "@Translation.Showing 0 @Translation.to 0 @Translation.of 0 @Translation.entries",
                        "emptyTable": false,
                        "sEmptyTable": "@Translation.NoMatchingRecords",
                    },
                });
            }

        }

    </script>
}

