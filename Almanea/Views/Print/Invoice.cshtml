
@{
    ViewBag.Title = Translation.Report;
    var UserGroupTypeId = Convert.ToInt32(HttpContext.Current.Session[cls_Defaults.Session_UserGroupTypeId]);
    var UserId = Convert.ToInt32(HttpContext.Current.Session[cls_Defaults.Session_UserId]);
    var UserGroupId = Convert.ToInt32(HttpContext.Current.Session[cls_Defaults.Session_UserGroupId]);
    var ActtypeId = Convert.ToInt32(HttpContext.Current.Session[cls_Defaults.Session_AccountTypeId]);
}

@using Almanea.BusinessLogic;
<style>
    .supplierSelect .select2-container {
        width: 100%;
        display:block;
    }
</style>
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <div class="row" id="divSearch">
                    @if (UserGroupId!=(int)enumGroupType.SuperAdmin && ActtypeId!=(int)enumSupplierAcct.Admin)
                    {
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>@Translation.UserGroupType</label>
                                <div class="form-label-group">
                                    @Html.DropDownList("UserGroupTypeId", cls_DropDowns.DDL_UserGroupTypes(), Translation.Select, new { @class = "form-control", onchange = "showHideSupplier();" })
                                </div>
                            </div>
                        </div>
                    }
                    

                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>@Translation.UserGroup</label>
                            <div class="form-label-group">
                                @Html.DropDownList("UserGroupId", cls_DropDowns.GetProviderList(UserGroupTypeId, ActtypeId, UserId), Translation.Select, new { @class = "form-control select2" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6" style="display:none" id="supplier_div">
                        <div class="form-group supplierSelect">
                            <label style="text-transform: capitalize;">@Translation.Supplier</label>
                            <br />
                            <select class="form-control select2" id="supplierid">
                                <option value="0">@Translation.All @Translation.Supplier</option>
                                @foreach (var item in cls_DropDowns.GetSupplierList())
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-xl-2 col-sm-4 col-md-3">
                        <div class="form-group">
                            <label>@Translation.FinishStartDate</label>
                            <div class="input-group">
                                <input type="text" id="start" class="form-control" />
                                <div class="input-group-append">
                                    <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-2 col-sm-4 col-md-3">
                        <div class="form-group">
                            <label>@Translation.FinishEndDate</label>
                            <div class="input-group">
                                <input type="text" id="finish" class="form-control" />
                                <div class="input-group-append">
                                    <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <p>
                    <input type="button" value="@Translation.Search" class="btn btn-primary pull-right" onclick="BindDataTable()" />
                    <span class="ta-right f-right">
                        <a style="margin-right:10px;" onclick="BindDataTableExcel();" title="Excel" data-toggle="tooltip"><i class="fa fa-file-excel"></i></a>
                        <a onclick="BindDataTablePdf();" title="Print" data-toggle="tooltip"><i class="fa fa-print"></i></a>
                    </span>
                </p>
            </div>
            <div class="table-responsive">
                <table class="table align-items-center table-flush" id="dataTable">
                    <thead class="thead-light">
                        <tr>
                            <th width="10%">@Translation.OrderNo</th>
                            <th width="10%">@Translation.InvoiceNo</th>
                            <th width="12%">@Translation.InstallOn</th>
                            <th width="20%">@Translation.Services</th>
                            <th width="12%">@Translation.Quantity</th>
                            <th width="12%">@Translation.UnitPrice</th>
                            <th width="14%">@Translation.Amount</th>
                            <th width="12%">@Translation.Vat</th>
                            <th width="14%">
                                @Translation.AdditonalAmount
                            </th>
                            <th width="12%">
                                @Translation.AdditionalVat
                            </th>
                            <th width="8%">@Translation.SubTotal</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@section scripts{

    <script>
        $(document).ready(function () {
            // Date range
            $('#start').datepicker({
                dateFormat: 'dd/mm/yy',
                changeMonth: true,
                changeYear: true,
                prevText: '<i class="fa fa-angle-left"></i>',
                nextText: '<i class="fa fa-angle-right"></i>',
                onSelect: function (selectedDate) {
                    $('#finish').datepicker('option', 'minDate', selectedDate);
                }
            });
            $('#finish').datepicker({
                dateFormat: 'dd/mm/yy',
                changeMonth: true,
                changeYear: true,
                prevText: '<i class="fa fa-angle-left"></i>',
                nextText: '<i class="fa fa-angle-right"></i>',
                maxDate: 0,
                onSelect: function (selectedDate) {
                    $('#start').datepicker('option', 'maxDate', selectedDate);
                }
            });
            $('#start').datepicker('setDate', new Date());
            $('#finish').datepicker('setDate', new Date());
            async: true;
            BindDataTableInit();
        });
    </script>
    <script>
        $(document).ready(function () {
            $("#UserGroupTypeId").change(function () {
                var id = $(this).val();
                $.get("@Url.Action("GetGroupName")", { Id: id }, function (data) {
                    $("#UserGroupId").find('option').remove();
                    $.each(data, function (index, row) {
                        $("#UserGroupId").append("<option value='" + row.Value + "'>" + row.Text + "</option>")
                    });
                });
            });
        });

          function getBranchbyId() {
            
             src = $("#supplierid");
            tgt = $("#AjentId");
            tgt.empty();
            tgt.append('<option value="0">@Translation.All</option>');
            if (src.val() != "0" || src.val() == '' || src.val() == null || src.val() == undefined) {
                $.ajax({
                    type: 'GET',
                    url: '/Orders/GetBranch',
                    dataType: 'json',
                    data: { groupid: src.val() },
                    success: function (p) {
                        $.each(p, function (i, pr) {
                            tgt.append(
                                '<option value="' + pr.Value + '">' +
                                pr.Text + '</option>'
                            );
                        })
                    }
                });
            }
        };

        function showHideSupplier() {
            
            var data = $("#UserGroupTypeId").val();
            if (data == "1") {
                $("#supplier_div").css({ 'display': 'block' });
            }
            else {
                $("#supplier_div").css({ 'display': 'none' });
            }
        };

        function BindDataTableInit() {
            var uGTypeId = $('#UserGroupTypeId').val();
            var uGroupId = $("#UserGroupId").val();
            var fromDate = $('#start').val();
            var toDate = $('#finish').val();

            //if (uGTypeId == '' || uGroupId == '' || fromDate == '' || toDate == '') {
             if (fromDate == '' || toDate == '') {
                warningPopup('Enter All Details');
                return;
            }
            else {
                 BindData(uGTypeId, uGroupId );
            }
        };

        $(document).keypress(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                BindDataTable();
            }
        });

        function BindDataTable() {
            var uGTypeId = $('#UserGroupTypeId').val();
            var uGroupId = $("#UserGroupId").val();
            var fromDate = $('#start').val();
            var toDate = $('#finish').val();

            if (uGTypeId == '' || uGroupId == '' || fromDate == '' || toDate == '') {
                warningPopup('Enter All Details');
                return;
            }
            else {
                BindData(uGTypeId, uGroupId);
            }
        };

        var oTable;
        function BindData(response) {
            var uGTypeId = $('#UserGroupTypeId').val();
            var uGroupId = $("#UserGroupId").val();
            var fromDate = $('#start').val();
            var toDate = $('#finish').val();


            if ($.fn.DataTable.isDataTable("#dataTable")) {
                oTable.draw();
                if ($('#UserGroupTypeId').val() == "2") {
                    oTable.columns([8, 9]).visible(false);
                }
                else {
                    oTable.columns([8, 9]).visible(true);
                }
            }
            else {
                
                oTable = $("#dataTable").DataTable({
                    "bProcessing": true,
                    "bServerSide": true,
                    "dom": '<"top"i>rt<"bottom"lp><"clear">',
                    "bSearchable": true,
                    "bSortable": true,
                    "bLengthChange": false,
                    "bInfo": true,
                    "bAutoWidth": false,
                    "AutoWidth": false,
                    "sAjaxSource": "@Url.Action("DetailReportExcel")",
                    "fnServerData": function (sSource, aoData, fnCallBack) {
                        aoData.push(
                            { "name": "fromDate", "value": $('#start').val() },
                            { "name": "toDate", "value": $('#finish').val() },
                            { "name": "userGroupTypeId", "value": $('#UserGroupTypeId').val() },
                            { "name": "UserGroupId", "value": $("#UserGroupId").val() },
                            { "name": "supplierid", "value": $("#supplierid").val() },
                        );
                        $.ajax({
                            type: "GET",
                            url: sSource,
                            data: aoData,
                            success: fnCallBack
                        });
                    },
                    "aoColumns": [
                        { "mData": "OrderNo", },
                        { "mData": "InvoiceNo", },
                        { "mData": "InstallDate", "orderable": true },
                        { "mData": "ServicesName", "orderable": false },
                        { "mData": "Quantity", "orderable": false },
                        { "mData": "Services_UnitPrice", "orderable": false },
                        { "mData": "Amount", "orderable": false },
                        { "mData": "Vat", "orderable": false },
                        { "mData": "AdditonalAmount", "orderable": false },
                        { "mData": "AdditionalVat", "orderable": false },
                        { "mData": "SubTotal", "orderable": false },
                    ],
                    "order": [[1, "desc"]],
                    "fnInitComplete": function (oSettings, json) {
                    },
                    "fnDrawCallback": function (oSettings) {
                    },
                    "language": {
                        "paginate": {
                            "previous": "«",
                            "next": "»",
                        },
                        "info": "@Translation.Showing _START_ @Translation.to _END_ @Translation.of _TOTAL_ @Translation.entries",
                        "emptyTable": false,
                        "infoEmpty": "@Translation.NoMatchingRecords",
                    },
                    //'rowsGroup': [2],
                    //'createdRow': function (row, data, dataIndex) {
                    //    // Use empty value in the "Office" column
                    //    // as an indication that grouping with COLSPAN is needed
                    //    if (data.Services.length > 1) {
                    //        // Add COLSPAN attribute
                    //        $('td:eq(3)', row).attr('colspan', 5);
                    //        // Hide required number of columns
                    //        // next to the cell with COLSPAN attribute
                    //        $('td:eq(4)', row).css('display', 'none');
                    //        $('td:eq(5)', row).css('display', 'none');
                    //        $('td:eq(6)', row).css('display', 'none');
                    //        $('td:eq(7)', row).css('display', 'none');
                    //    }
                    //}
                });
                if ($('#UserGroupTypeId').val() == "2") {
                    oTable.columns([8, 9]).visible(false);
                }
                else {
                    oTable.columns([8, 9]).visible(true);
                }
            }

        }

        function BindDataTablePdf() {

            var uGTypeId = $('#UserGroupTypeId').val();
            var uGroupId = $("#UserGroupId").val();
            var fromDate = $('#start').val();
            var toDate = $('#finish').val();
            var supplierid = parseInt($("#supplierid").val());

            if (uGTypeId == '' || uGTypeId == null)
            {
                uGTypeId = "0";
            }

            if (uGTypeId == '' || uGroupId == '' ||
                fromDate == '' || toDate == '') {

                warningPopup('Enter All Details');
                return;
            }
            else {
                var url = "@ViewBag.TypeId" +
                    "?UserGroupTypeId=" + uGTypeId +
                    "&UserGroupId=" + uGroupId +
                    "&fromDate=" + fromDate +
                    "&toDate=" + toDate +
                    "&supplierid=" + supplierid;

                var win = window.open(url, '_blank');
                win.focus();
            }
        };

        function BindDataTableExcel() {
            var uGTypeId = $('#UserGroupTypeId').val();
            var uGroupId = $("#UserGroupId").val();
            var fromDate = $('#start').val();
            var toDate = $('#finish').val();
            var supplierid = parseInt($("#supplierid").val());
           
            if (uGTypeId == '' || uGroupId == '' ||
                fromDate == '' || toDate == '') {

                warningPopup('Enter All Details');
                return;
            }
            else {
                var url = "@Url.Action("InvoiceExcelExport", "Print")?fromDate=" + fromDate + "&toDate=" + toDate + "&userGroupTypeId=" + uGTypeId + "&userGroupId=" + uGroupId + "&supplierid=" + supplierid;

            var win = window.open(url, '_blank');
            win.focus();
            }
        }

    </script>
}