
@{
    ViewBag.Title = Translation.Inventory;
}

@model vm_Order

@using Almanea.Models;
@using Almanea.BusinessLogic;

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">

            <div class="card-body">

                <hr class="thick" />

                <div class="row">
                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group">
                            @Html.LabelFor(m => m.LabourIds, new { @class = "bmd-label-floating required" })
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.SupplierName, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    @*<div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group">
                            <span>@Translation.Total</span>
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.OrderId, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>*@
                    <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="form-group">
                            <label>@Translation.AvalInventory</label>
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.LocationId, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="table-responsive">
                            <table class="table align-items-center table-flush table-bordered" id="dataTable">
                                <thead class="thead-light">
                                    <tr>
                                        <th width="25%">@Translation.Items</th>
                                        <th width="25%">@Translation.Service</th>
                                        <th width="15%">@Translation.Quantity</th>
                                        <th width="15%">@Translation.Orders</th>

                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<style>
    #seconddialog.modal-dialog {
        overflow-y: initial !important
    }

    #secondModalBody.modal-body {
        max-height: 500px;
        overflow-y: auto;
    }
</style>
@section scripts{


    <script>
        $(function () {
            BindDataTable();
        });
        var oTable;
        function BindDataTable() {

         oTable = $("#dataTable").DataTable({
                    "bProcessing": true,
                    "bServerSide": true,
                    "dom": '<"top"i>rt<"bottom"lp><"clear">',
                    "bSearchable": true,
                    "bSortable": false,
                    "bLengthChange": false,
                    "bInfo": true,
                    "bAutoWidth": false,
                    "AutoWidth": false,
                    "sAjaxSource": "@Url.Action("GetInventoryDetails", "Inventory")",
             "fnServerData": function (sSource, aoData, fnCallBack) {
                 aoData.push(
                     { "name": "Id", "value": location.pathname.substring(location.pathname.lastIndexOf("/") + 1)},
                 );
                        $.ajax({
                            type: "GET",
                            url: sSource,
                            data: aoData,
                            success: fnCallBack
                        });
                    }
                    ,
                    "columnDefs": [{
                        "targets": 0,
                        "type": 'date',
                    }],
                    // data: response,
                    "aoColumns": [


                        { "mData": "ItemId" },
                        { "mData": "ServiceId" },
                        { "mData": "Quantity" },
                        { "mData": "orderId" }

                    ],
                    "order": [[1, "desc"]],
                    "fnInitComplete": function (oSettings, json) {
                    },
                    "fnDrawCallback": function (oSettings) {
                    },
                    "language": {
                        "paginate": {
                            "previous": "«",
                            "next": "»",
                        },
                      "info": "@Translation.Showing _START_ @Translation.to _END_ @Translation.of _TOTAL_ @Translation.entries",
                        "infoEmpty": "@Translation.Showing 0 @Translation.to 0 @Translation.of 0 @Translation.entries",
                        "emptyTable": false,
                        "sEmptyTable": "@Translation.NoMatchingRecords",
                    },
         });
        }
    </script>



}
