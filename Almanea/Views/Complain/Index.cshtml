
@*@{
    ViewBag.Title = Translation.ComplainList;
}*@

@model  Almanea.Models.vm_Complain

@using Almanea.BusinessLogic;

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <div class="row" id="divSearch">
                    <div class="col-xl-4 col-sm-6 col-md-4">
                        <div class="form-group">
                            <div class="form-label-group">
                                <input type="text" id="sInvoiceNo" class="form-control" placeholder="@Translation.InvoiceNo /@Translation.OrderNo" />
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-4 col-sm-6 col-md-4" hidden>
                        <div class="form-group">
                            <div class="form-label-group">
                                <select class="form-control select2" id="sCategory">
                                    <option value="">@Translation.SelectComplainCategory</option>
                                    @foreach (var item in cls_DropDowns.GetCategory())
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-4 col-sm-6 col-md-4">
                        <div class="form-group">
                            <div class="form-label-group">
                                <input type="text" id="sDate" class="form-control datepickerall" placeholder="@Translation.AddedOn" />
                            </div>
                        </div>
                    </div>
                    @*<div class="col-xl-4 col-sm-6 col-md-4">
                        <div class="form-group">
                            <div class="form-label-group">
                                <select class="form-control select2" id="sStatus">
                                    <option value="">@Translation.Select</option>
                                    @foreach (var item in cls_DropDowns.AllOrderStatus().Where(k => k.Value != ((int)OrderStatus.ReSchedule).ToString()))
                                    {

                                        if (item.Value != "1")
                                        {
                                            <option value="@item.Value">@item.Text</option>


                                        }
                                        else
                                        {
                                            <option value="@item.Value">New</option>

                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>*@
                </div>
                <p>
                    <input type="button" value="@Translation.Search" class="btn btn-primary" onclick="BindDataTable()" />
                </p>
            </div>
            <div class="table-responsive">
                <table class="table align-items-center table-flush" id="dataTable">
                    <thead class="thead-light">
                        <tr>
                            <th width="15%">@Translation.ComplainId</th>
                            <th width="15%">@Translation.OrderNo</th>
                            <th width="30%">@Translation.ComplainCategory</th>
                            <th width="25%">@Translation.SubmissionDate</th>
                            <th width="10%">@Translation.Status</th>
                            <th width="30%">@Translation.CloseDate</th>
                            <th width="5%">@Translation.Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>

        </div>
    </div>
</div>


@section scripts{

    <script>
        $(document).ready(function () {
            async: true;
            //List
            BindDataTable();
        });
        $(document).keypress(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                BindDataTable();
            }
        });
        var oTable;
    function BindDataTable(response) {
        if ($.fn.DataTable.isDataTable("#dataTable")) {
            oTable.draw();
        }
        else {
            oTable = $("#dataTable").DataTable({
                "bProcessing": true,
                "bServerSide": true,
                "dom": '<"top"i>rt<"bottom"lp><"clear">',
                "bSearchable": true,
                "bSortable": true,
                "bLengthChange": false,
                "bInfo": true,
                "bAutoWidth": false,
                "AutoWidth": false,
                "sAjaxSource": "@Url.Action("GetAllComplain")",
                "fnServerData": function (sSource, aoData, fnCallBack) {
                    aoData.push(                        
                        { "name": "Date", "value": $('#sDate').val() },
                        { "name": "Category", "value": $('#sCategory').val() },
                        { "name": "InvoiceNo", "value": $('#sInvoiceNo').val() },
                        { "name": "TypeId", "value": @ViewBag.TypeId },
                        { "name": "status", "value": $('#sStatus').val() },
                    );
                    $.ajax({
                        type: "GET",
                        url: sSource,
                        data: aoData,
                        success: fnCallBack
                    });
                },
                // data: response,
                "aoColumns": [
                    { "mData": "ComplainId", },
                    { "mData": "OrderNo", },
                    { "mData": "Category", "orderable": false },
                    { "mData": "AddedOn" },
                    { "mData": "Status" },
                    { "mData": "ResolveOn", "orderable": true },
                    {
                        "mData": "Id",
                        "render": function (Id, type, full, meta) {
                            return '<a href="@Url.Action("Details")/' + Id + '" title="@Translation.View" data-toggle="tooltip"><i class="fa fa-eye"></i></a>';
                                //'&nbsp;<a href="javascript:void(0);" onclick="Close(\'' + Id + '\')" title="@Translation.Close" data-toggle="tooltip"><i class="fa fa-times"></i></a>';
                        },
                        "orderable": false
                    },
                ],
                "order": [[0, "desc"]],
                "fnInitComplete": function (oSettings, json) {
                },
                "fnDrawCallback": function (oSettings) {
                },
                "language": {
                    "paginate": {
                        "previous": "«",
                        "next": "»",
                    },
                    "info": "@Translation.Showing _START_ @Translation.to _END_ @Translation.of _TOTAL_ @Translation.entries",
                    "infoEmpty": "@Translation.Showing 0 @Translation.to 0 @Translation.of 0 @Translation.entries",
                    "emptyTable": false,
                    "sEmptyTable": "@Translation.NoMatchingRecords",
                },
            });
        }
    }


    function Close(Id) {
        var isOk = confirm("Are you sure, you want to close complain ?");
        if(isOk == true){
             onBegin();
         $.post("@Url.Action("UpdateComplain")", {
                'Id': Id,
                'Response': "",
                'StatusId': 5
            }, function (response) {
                if (response.StatusId > 0) {
                    //Success Message
                    successPopup("@Translation.success_Update");
                }
                onComplete();
            });
        }

    }
    </script>
}